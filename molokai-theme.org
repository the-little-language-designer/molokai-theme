* heading-level-1
** heading-level-2
*** heading-level-3
**** heading-level-4
***** heading-level-5
****** heading-level-6
******* heading-level-7
******** heading-level-8
********* heading-level-9

* molokai-theme.el
  #+begin_src emacs-lisp :tangle molokai-theme.el
  (deftheme molokai "The molokai color theme for Emacs 24")

  (let ((class '((class color) (min-colors 89)))
        ;; molokai palette
        (molokai-white          "#ffffff")
        (molokai-fg             "#f8f8f0")
        (molokai-red            "#ff2727")
        (molokai-pink           "#f92672")
        (molokai-pink+1         "#ea0037")
        (molokai-pink+2         "#fe1333")
        (molokai-orange+5       "#ef5939")
        (molokai-orange         "#fd971f")
        (molokai-yellow         "#ffff00")
        (molokai-darkgoldenrod  "#e6db74")
        (molokai-wheat          "#c4be89")
        (molokai-olive          "#808000")
        (molokai-chartreuse     "#a6e22e")
        (molokai-lime           "#00ff00")
        (molokai-green          "#008000")
        (molokai-darkwine       "#1e0010")
        (molokai-maroon         "#800000")
        (molokai-wine           "#960050")
        (molokai-teal           "#008080")
        (molokai-aqua           "#00ffff")
        (molokai-blue           "#66d9ef")
        (molokai-slateblue      "#7070f0")
        (molokai-purple         "#ae81ff")
        (molokai-palevioletred  "#d33682")
        (molokai-grey-2         "#bcbcbc")
        (molokai-grey-1         "#8f8f8f")
        (molokai-grey           "#808080")
        (molokai-grey+2         "#403d3d")
        (molokai-grey+3         "#4c4745")
        (molokai-grey+5         "#232526")

        (molokai-bg             "#1b1d1e")

        (molokai-grey+10        "#080808")
        (molokai-dark           "#000000")

        ;; comment
        (molokai-base01         "#FF8888")
        (molokai-base02         "#455354")
        (molokai-base03         "#293739")
        (molokai-dodgerblue     "#13354a"))

    (custom-theme-set-faces
     'molokai

     ;; base
     `(default ((t (:background ,molokai-bg :foreground ,molokai-fg))))
     `(cursor ((t (:background ,molokai-fg :foreground ,molokai-bg))))
     `(fringe ((t (:foreground ,molokai-base02 :background ,molokai-bg))))
     `(highlight ((t (:background ,molokai-grey))))
     `(region ((t (:background  ,molokai-grey+2))
               (t :inverse-video t)))
     `(warning ((t (:foreground ,molokai-palevioletred :weight bold))))

     ;; font lock
     `(font-lock-builtin-face ((t (:foreground ,molokai-chartreuse))))
     `(font-lock-comment-face ((t (:foreground ,molokai-base01))))
     `(font-lock-comment-delimiter-face ((t (:foreground ,molokai-base01))))
     `(font-lock-constant-face ((t (:foreground ,molokai-purple))))
     `(font-lock-doc-string-face ((t (:foreground ,molokai-darkgoldenrod))))
     `(font-lock-function-name-face ((t (:foreground ,molokai-chartreuse))))
     `(font-lock-keyword-face ((t (:foreground ,molokai-pink :weight bold))))
     `(font-lock-negation-char-face ((t (:foreground ,molokai-wine))))
     `(font-lock-preprocessor-face ((t (:inherit (font-lock-builtin-face)))))
     `(font-lock-regexp-grouping-backslash ((t (:inherit (bold)))))
     `(font-lock-regexp-grouping-construct ((t (:inherit (bold)))))
     `(font-lock-string-face ((t (:foreground ,molokai-darkgoldenrod))))
     `(font-lock-type-face ((t (:foreground ,molokai-blue :weight bold))))
     `(font-lock-variable-name-face ((t (:foreground ,molokai-orange))))
     `(font-lock-warning-face ((t (:foreground ,molokai-palevioletred :weight bold))))

     ;; mode line
     `(mode-line ((t (:foreground ,molokai-fg
                                  :background ,molokai-base03
                                  :box nil))))
     `(mode-line-buffer-id ((t (:weight bold))))
     `(mode-line-inactive ((t (:foreground ,molokai-fg
                                           :background ,molokai-base02
                                           :box nil))))

     ;; search
     `(isearch ((t (:foreground ,molokai-dark :background ,molokai-wheat :weight bold))))
     `(isearch-fail ((t (:foreground ,molokai-wine :background ,molokai-darkwine))))

     ;; linum-mode
     `(linum ((t (:foreground ,molokai-grey-2 :background ,molokai-grey+5))))

     ;; hl-line-mode
     `(hl-line-face ((,class (:background ,molokai-grey+5)) (t :weight bold)))
     `(hl-line ((,class (:background ,molokai-grey+5)) (t :weight bold)))

     ;; org-mode
     `(org-level-1 ((t (:foreground ,molokai-chartreuse))))
     `(org-level-2 ((t (:foreground ,molokai-orange))))
     `(org-level-3 ((t (:foreground ,molokai-red))))
     `(org-level-4 ((t (:foreground ,molokai-purple))))
     `(org-level-5 ((t (:foreground ,molokai-blue))))
     `(org-level-6 ((t (:foreground ,molokai-chartreuse))))
     `(org-level-7 ((t (:foreground ,molokai-orange+5))))
     `(org-level-8 ((t (:foreground ,molokai-palevioletred))))
     `(org-level-9 ((t (:foreground ,molokai-wheat))))

     ;; TODO
     ;; ido-mode
     ;; flycheck
     ;; show-paren
     ;; rainbow-delimiters
     ;; highlight-symbols

     ))

  (defcustom molokai-theme-kit nil
    "Non-nil means load molokai-theme-kit UI component"
    :type 'boolean
    :group 'molokai-theme)

  (defcustom molokai-theme-kit-file
    (concat (file-name-directory
             (or (buffer-file-name) load-file-name))
            "molokai-theme-kit.el")
    "molokai-theme-kit-file"
    :type 'string
    :group 'molokai-theme)

  (if (and molokai-theme-kit
           (file-exists-p molokai-theme-kit-file))
      (load-file molokai-theme-kit-file))

  ;;;###autoload
  (and load-file-name
       (boundp 'custom-theme-load-path)
       (add-to-list 'custom-theme-load-path
                    (file-name-as-directory
                     (file-name-directory load-file-name))))

  (provide-theme 'molokai)
  #+end_src

* molokai-theme-kit.el
  #+begin_src emacs-lisp :tangle molokai-theme-kit.el
  (setq-default
   mode-line-format
   (list
    ;; line and column
    " "
    (propertize "%3c" 'face 'font-lock-type-face)
    " "
    (propertize "%4l" 'face 'font-lock-type-face)
    " "
    ;; the buffer name; the file name as a tool tip
    '(:eval
      (propertize "%b" 'face 'font-lock-keyword-face 'help-echo (buffer-file-name)))
    ;; was this buffer modified since the last save?
    '(:eval
      (when (buffer-modified-p)
        (concat " "
                (propertize "modified"
                            'face 'font-lock-preprocessor-face
                            'help-echo "Buffer has been modified"))))
    ;; is this buffer read-only?
    '(:eval
      (when buffer-read-only
        (concat " "
                (propertize "read-only"
                            'face 'font-lock-preprocessor-face
                            'help-echo "Buffer is read-only"))))
    " "

    ;; the current major mode for the buffer.
    '(:eval
      (propertize "%m" 'face 'font-lock-string-face 'help-echo buffer-file-coding-system))
    " "

    ;; relative position, size of file
    (propertize "%I" 'face 'font-lock-constant-face)
    " "
    (propertize "%p" 'face 'font-lock-constant-face)

    ))

  (provide 'molokai-theme-kit)
  #+end_src
